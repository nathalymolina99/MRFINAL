{"ast":null,"code":"import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/authContext';\n\n// const PrivateRoute = ({ children, role }) => {\n//   const { auth } = useContext(AuthContext);\n\n//   if (!auth) {\n//     // Si no está autenticado, redirigir al login\n//     return <Navigate to=\"/\" />;\n//   }\n\n//   if (role && auth.role !== role) {\n//     // Si el rol no coincide, redirigir a la página de bienvenida o a otra página de acceso denegado\n//     return <Navigate to=\"/\" />;\n//   }\n\n//   return children;\n// };\n\nexport default PrivateRoute;","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","PrivateRoute"],"sources":["C:/Users/natha/MRPROYECTO/web-frontend/src/components/privateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\n// const PrivateRoute = ({ children, role }) => {\r\n//   const { auth } = useContext(AuthContext);\r\n  \r\n//   if (!auth) {\r\n//     // Si no está autenticado, redirigir al login\r\n//     return <Navigate to=\"/\" />;\r\n//   }\r\n  \r\n//   if (role && auth.role !== role) {\r\n//     // Si el rol no coincide, redirigir a la página de bienvenida o a otra página de acceso denegado\r\n//     return <Navigate to=\"/\" />;\r\n//   }\r\n  \r\n//   return children;\r\n// };\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}