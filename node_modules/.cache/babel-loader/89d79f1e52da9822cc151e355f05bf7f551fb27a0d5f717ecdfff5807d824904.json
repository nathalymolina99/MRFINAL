{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/authContext';\nconst PrivateRoute = ({\n  children,\n  role\n}) => {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n\n  //   if (!auth) {\n  //     // Si no está autenticado, redirigir al login\n  //     return <Navigate to=\"/login\" />;\n  //   }\n\n  //   if (role && auth.role !== role) {\n  //     // Si el rol no coincide, redirigir a la página de bienvenida o a otra página de acceso denegado\n  //     return <Navigate to=\"/\" />;\n  //   }\n\n  return children;\n};\n_s(PrivateRoute, \"tr1QHgBDI2fKKLySXzFBgmQfvcw=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","PrivateRoute","children","role","_s","auth","_c","$RefreshReg$"],"sources":["C:/Users/natha/MRPROYECTO/web-frontend/src/components/privateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst PrivateRoute = ({ children, role }) => {\r\n  const { auth } = useContext(AuthContext);\r\n  \r\n//   if (!auth) {\r\n//     // Si no está autenticado, redirigir al login\r\n//     return <Navigate to=\"/login\" />;\r\n//   }\r\n  \r\n//   if (role && auth.role !== role) {\r\n//     // Si el rol no coincide, redirigir a la página de bienvenida o a otra página de acceso denegado\r\n//     return <Navigate to=\"/\" />;\r\n//   }\r\n  \r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC;EAAK,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;;EAE1C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEE,OAAOE,QAAQ;AACjB,CAAC;AAACE,EAAA,CAdIH,YAAY;AAAAK,EAAA,GAAZL,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}